import re

# Original DDL script
ddl_script = '''
CREATE TABLE ASIGNAL1 (
   ASIGNO NUMBER NOT NULL ENABLE, 
   ACONECTNO NUMBER NOT NULL ENABLE, 
   ASIGNAME VARCHAR2(120) NOT NULL ENABLE, 
   ASIGTYPENO NUMBER NOT NULL ENABLE, 
   AMINVOLT FLOAT(126) NOT NULL ENABLE, 
   AMAXVOLT FLOAT(126) NOT NULL ENABLE, 
   AMULTFACTOR FLOAT(126) NOT NULL ENABLE, 
   AALARMSTART NUMBER NOT NULL ENABLE, 
   AALARMTOTTIME NUMBER NOT NULL ENABLE, 
   ASIGDESCR VARCHAR2(75) NOT NULL ENABLE, 
   AUNITS NUMBER, 
   ANGTRIGS VARCHAR2(765), 
   LTIME NUMBER, 
   DLYEAR NUMBER, 
   CURRENTVOLT FLOAT(126), 
   TOLERANCE NUMBER, 
   FLTSTS VARCHAR2(12), 
   FLTMINV1 FLOAT(126), 
   FLTMINV2 FLOAT(126), 
   CONSIDER_SIGMON VARCHAR2(3), 
   STANDBY_CHANNELS VARCHAR2(300), 
   SIGMON_CHANNEL_TYPE NUMBER
) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE SITE_NW_SKEL
'''

# Regular expression pattern to capture the core table definition, including nested parentheses
pattern = r'CREATE TABLE\s+\w+\s*\((?:[^()]*|\((?:[^()]*|\([^()]*\))*\))*\)'

# Extract the core table definition
match = re.search(pattern, ddl_script, re.DOTALL | re.IGNORECASE)

if match:
    core_ddl = match.group(0).strip()
    print(core_ddl)
else:
    print("No match found.")
